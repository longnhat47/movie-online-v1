{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport movieService from '@/services/movie/movie';\nimport commentService from '@/services/comment/comment';\nimport moment from 'moment';\nimport API_MEDIA from '../../env';\nexport default {\n  data() {\n    return {\n      img: API_MEDIA,\n      title: '',\n      movie: '',\n      comment: ''\n    };\n  },\n  computed: {},\n  methods: {\n    formatDate(value) {\n      if (value) {\n        return moment(String(value)).format('MM/DD/YYYY hh:mm');\n      }\n      return 'NAN';\n    },\n    async commentFunc() {\n      if (localStorage.getItem('token') != null) {\n        await commentService.create({\n          movie: this.$route.params.id,\n          content: this.comment\n        });\n        const update = await await movieService.get(this.$route.params.id);\n        this.movie.comment = update.data.comment;\n        this.comment = '';\n      } else {\n        this.$router.push('/login');\n      }\n    }\n  },\n  async created() {\n    try {\n      const {\n        data: movie\n      } = await movieService.get(this.$route.params.id);\n      this.title = movie.category.name + '<spqn>' + movie.name;\n      this.movie = movie;\n      await movieService.updateView(this.$route.params.id);\n    } catch (e) {\n      this.$router.push('/404');\n    }\n  }\n};","map":{"version":3,"names":["movieService","commentService","moment","API_MEDIA","data","img","title","movie","comment","computed","methods","formatDate","value","String","format","commentFunc","localStorage","getItem","create","$route","params","id","content","update","get","$router","push","created","category","name","updateView","e"],"sources":["D:\\nhatj\\WorkSpace\\MovieOnline\\movie-web\\src\\components\\WatchMovieComponent.vue"],"sourcesContent":["<template>\n  <div class=\"movie-detail mt-5\">\n    <div class=\"container\">\n      <p class=\"movie-name\">Xem phim>{{ title }}</p>\n      <video :src=\"movie.video\" controls class=\"video object-fit-fill\"></video>\n      <p class=\"movie-desc mt-3\">Mô tả: {{ movie.description }}</p>\n      <div class=\"review mt-5 mb-5\">\n        <div class=\"review-form\">\n          <p>Bình luận</p>\n          <div class=\"form-floating\">\n            <textarea ref=\"commentArea\" class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea2\" style=\"height: 100px\"\n              v-model=\"comment\"></textarea>\n            <label  for=\"floatingTextarea2\">Comments</label>\n          </div>\n          <button class=\"btn btn-primary mt-2\" @click=\"commentFunc\">Bình luận</button>\n        </div>\n        <div class=\"review-item mt-5\" v-for=\"c in movie.comment\" :key=\"c.id\">\n          <div class=\"row d-flex\">\n            <div class=\"row col-2\">\n              <div class=\"col-4\">\n                <img :src=\"'http://127.0.0.1:8000' + c.user.image\" alt=\"user\"\n                  class=\"rounded-circle object-fit-cover user-img-comment\">\n              </div>\n              <div class=\"row col-8\">\n                <p class=\"user-name-comment\">{{ c.user.full_name }}</p>\n                <p class=\"comment\">{{ c.content }}</p>\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <p class=\"comment-date\">{{ formatDate(c.created_at) }}</p>\n            </div>\n          </div>\n          <hr>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport movieService from '@/services/movie/movie'\nimport commentService from '@/services/comment/comment'\nimport moment from 'moment'\nimport API_MEDIA from '../../env'\n\nexport default {\n  data() {\n    return {\n      img: API_MEDIA,\n      title: '',\n      movie: '',\n      comment: ''\n    }\n  },\n  computed: {\n  },\n  methods: {\n    formatDate(value) {\n      if (value) {\n        return moment(String(value)).format('MM/DD/YYYY hh:mm')\n      }\n      return 'NAN'\n    },\n    async commentFunc() {\n      if (localStorage.getItem('token') != null) {\n        await commentService.create({ movie: this.$route.params.id, content: this.comment })\n        const update = await await movieService.get(this.$route.params.id)\n        this.movie.comment = update.data.comment\n        this.comment = ''\n      } else {\n        this.$router.push('/login')\n      }\n    }\n  },\n  async created() {\n    try {\n      const {data: movie} = await movieService.get(this.$route.params.id)\n      this.title = movie.category.name + '<spqn>' + movie.name\n      this.movie = movie\n      await movieService.updateView(this.$route.params.id)\n    } catch (e) {\n      this.$router.push('/404')\n    }\n\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.movie-detail {\n  min-height: 100vh;\n\n  .movie-name {\n    font-size: 22px;\n  }\n\n  .video {\n    max-width: 100%;\n  }\n\n  .review {\n    .review-item {\n      .user-img-comment {\n        width: 100%;\n        min-height: 50%;\n      }\n\n      .user-name-comment {\n        display: block;\n        padding-left: 0;\n        font-size: 18px;\n      }\n\n      .comment-date {\n        font-size: 12px;\n        color: cadetblue;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":";AAwCA,OAAOA,YAAW,MAAO,wBAAuB;AAChD,OAAOC,cAAa,MAAO,4BAA2B;AACtD,OAAOC,MAAK,MAAO,QAAO;AAC1B,OAAOC,SAAQ,MAAO,WAAU;AAEhC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAEF,SAAS;MACdG,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,QAAQ,EAAE,CACV,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAIA,KAAK,EAAE;QACT,OAAOV,MAAM,CAACW,MAAM,CAACD,KAAK,CAAC,CAAC,CAACE,MAAM,CAAC,kBAAkB;MACxD;MACA,OAAO,KAAI;IACb,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,KAAK,IAAI,EAAE;QACzC,MAAMhB,cAAc,CAACiB,MAAM,CAAC;UAAEX,KAAK,EAAE,IAAI,CAACY,MAAM,CAACC,MAAM,CAACC,EAAE;UAAEC,OAAO,EAAE,IAAI,CAACd;QAAQ,CAAC;QACnF,MAAMe,MAAK,GAAI,MAAM,MAAMvB,YAAY,CAACwB,GAAG,CAAC,IAAI,CAACL,MAAM,CAACC,MAAM,CAACC,EAAE;QACjE,IAAI,CAACd,KAAK,CAACC,OAAM,GAAIe,MAAM,CAACnB,IAAI,CAACI,OAAM;QACvC,IAAI,CAACA,OAAM,GAAI,EAAC;MAClB,OAAO;QACL,IAAI,CAACiB,OAAO,CAACC,IAAI,CAAC,QAAQ;MAC5B;IACF;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAM;QAACvB,IAAI,EAAEG;MAAK,IAAI,MAAMP,YAAY,CAACwB,GAAG,CAAC,IAAI,CAACL,MAAM,CAACC,MAAM,CAACC,EAAE;MAClE,IAAI,CAACf,KAAI,GAAIC,KAAK,CAACqB,QAAQ,CAACC,IAAG,GAAI,QAAO,GAAItB,KAAK,CAACsB,IAAG;MACvD,IAAI,CAACtB,KAAI,GAAIA,KAAI;MACjB,MAAMP,YAAY,CAAC8B,UAAU,CAAC,IAAI,CAACX,MAAM,CAACC,MAAM,CAACC,EAAE;IACrD,EAAE,OAAOU,CAAC,EAAE;MACV,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,MAAM;IAC1B;EAEF;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}