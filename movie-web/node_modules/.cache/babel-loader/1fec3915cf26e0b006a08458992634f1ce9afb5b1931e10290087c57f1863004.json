{"ast":null,"code":"import BaseService from \"../base\";\nclass movieService extends BaseService {\n  get entity() {\n    return \"movie\";\n  }\n  async getAll() {\n    try {\n      return await this.request().get(`${this.entity}`);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async getAllAdmin() {\n    try {\n      return await this.request().get(`${this.entity}-admin`);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async get(id) {\n    try {\n      return await this.request().get(`${this.entity}/detail/${id}`);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async getTopView() {\n    try {\n      return await this.request().get(`${this.entity}/best-view`);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async getTopView() {\n    try {\n      return await this.request().get(`${this.entity}/best-view`);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async create(data) {\n    try {\n      const form = new FormData();\n      for (const [key, value] of Object.entries(data)) {\n        form.append(`${key}`, value);\n      }\n      return await this.request().post(`${this.entity}/create`, form, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async update(data) {\n    try {\n      const form = new FormData();\n      for (const [key, value] of Object.entries(data)) {\n        form.append(`${key}`, value);\n      }\n      return await this.request().patch(`${this.entity}/${data['id']}`, form, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async updateView(data) {\n    try {\n      return await this.request().put(`${this.entity}/update-view/${data}`, data);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async delete(id) {\n    try {\n      return await this.request().delete(`${this.entity}/${id}`);\n    } catch (e) {\n      return e.response;\n    }\n  }\n}\nexport default new movieService();","map":{"version":3,"names":["BaseService","movieService","entity","getAll","request","get","e","response","getAllAdmin","id","getTopView","create","data","form","FormData","key","value","Object","entries","append","post","headers","update","patch","updateView","put","delete"],"sources":["D:/nhatj/WorkSpace/MovieOnline/movie-web/src/services/movie/movie.js"],"sourcesContent":["import BaseService from \"../base\";\r\n\r\nclass movieService extends BaseService {\r\n    get entity() {\r\n        return \"movie\"\r\n    }\r\n\r\n    async getAll() {\r\n        try {\r\n            return await this.request().get(`${this.entity}`)\r\n        } catch (e) {\r\n            return e.response\r\n        }\r\n    }\r\n\r\n    async getAllAdmin() {\r\n        try {\r\n            return await this.request().get(`${this.entity}-admin`)\r\n        } catch (e) {\r\n            return e.response\r\n        }\r\n    }\r\n\r\n    async get(id) {\r\n        try {\r\n            return await this.request().get(`${this.entity}/detail/${id}`)\r\n        } catch (e) {\r\n            return e.response\r\n        }\r\n    }\r\n\r\n    async getTopView() {\r\n        try {\r\n            return await this.request().get(`${this.entity}/best-view`)\r\n        } catch (e) {\r\n            return e.response\r\n        }\r\n    }\r\n\r\n    async getTopView() {\r\n        try {\r\n            return await this.request().get(`${this.entity}/best-view`)\r\n        } catch (e) {\r\n            return e.response\r\n        }\r\n    }\r\n\r\n    async create(data) {\r\n        try {\r\n            const form = new FormData()\r\n            for(const [key, value] of Object.entries(data)) {\r\n                form.append(`${key}`, value)\r\n            }\r\n            return await this.request().post(`${this.entity}/create`, form, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            })\r\n        } catch (e) {\r\n            return e.response\r\n        }\r\n    }\r\n\r\n    async update(data) {\r\n        try {\r\n            const form = new FormData()\r\n            for(const [key, value] of Object.entries(data)) {\r\n                form.append(`${key}`, value)\r\n            }\r\n            return await this.request().patch(`${this.entity}/${data['id']}`, form, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            })\r\n        } catch (e) {\r\n            return e.response\r\n        }\r\n    }\r\n\r\n    async updateView(data) {\r\n        try {\r\n            return await this.request().put(`${this.entity}/update-view/${data}`, data)\r\n        } catch (e) {\r\n            return e.response\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        try {\r\n            return await this.request().delete(`${this.entity}/${id}`)\r\n        } catch (e) {\r\n            return e.response;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new movieService();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}