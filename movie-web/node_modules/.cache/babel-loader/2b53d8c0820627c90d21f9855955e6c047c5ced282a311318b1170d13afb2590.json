{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions, mapState } from 'vuex';\nexport default {\n  data() {\n    return {\n      data: null,\n      dataModel: {\n        id: '',\n        name: ''\n      },\n      isShow: false,\n      button: {\n        add: false,\n        edit: false,\n        delete: false\n      }\n    };\n  },\n  components: {},\n  computed: {\n    ...mapState('category', ['category'])\n  },\n  methods: {\n    ...mapActions('category', ['fetchCategory', 'createCategory', 'updateCategory', 'deleteCategory']),\n    modalEvent(str) {\n      switch (str) {\n        case 'add':\n          this.isShow = !this.isShow;\n          this.button.add = !this.button.add;\n          break;\n        case 'edit':\n          this.isShow = !this.isShow;\n          this.button.edit = !this.button.edit;\n          break;\n        case 'delete':\n          this.isShow = !this.isShow;\n          this.button.delete = !this.button.delete;\n          break;\n      }\n    },\n    hideModal(event) {\n      if (event.target.id == 'modal') {\n        this.$refs.modal.style.display = 'none';\n      }\n    },\n    editModal(data) {\n      this.dataModel.id = data.id;\n      this.dataModel.name = data.name;\n      this.isShow = !this.isShow;\n      this.button.edit = !this.button.edit;\n      const el = this.$refs.edit;\n      el.value = data.name;\n    },\n    deleteModal(data) {\n      this.dataModel.id = data.id;\n      this.isShow = !this.isShow;\n      this.button.delete = !this.button.delete;\n      const el = this.$refs.titleDelete;\n      el.innerHTML = 'Bạn có muốn xóa danh mục ' + `<h1>${data.name}</h1>`;\n    },\n    addModel() {\n      this.createCategory(this.dataModel);\n      this.isShow = !this.isShow;\n      this.button.add = !this.button.add;\n      console.log(this.data);\n    },\n    editModel() {\n      this.updateCategory(this.dataModel);\n      var i = 0;\n      while (i < this.data.length) {\n        if (this.data[i].id === this.dataModel.id) {\n          console.log(this.data[i]);\n          this.data[i].name = this.dataModel.name;\n          break;\n        } else {\n          ++i;\n        }\n      }\n      this.isShow = !this.isShow;\n      this.button.edit = !this.button.edit;\n    },\n    removeModel() {\n      this.deleteCategory(this.dataModel);\n      var i = 0;\n      while (i < this.data.length) {\n        if (this.data[i].id === this.dataModel.id) {\n          console.log(this.data[i]);\n          this.data.splice(i, 1);\n          break;\n        } else {\n          ++i;\n        }\n      }\n      this.isShow = !this.isShow;\n      this.button.delete = !this.button.delete;\n    }\n  },\n  created() {\n    this.fetchCategory().then(o => this.data = o);\n  }\n};","map":{"version":3,"names":["mapActions","mapState","data","dataModel","id","name","isShow","button","add","edit","delete","components","computed","methods","modalEvent","str","hideModal","event","target","$refs","modal","style","display","editModal","el","value","deleteModal","titleDelete","innerHTML","addModel","createCategory","console","log","editModel","updateCategory","i","length","removeModel","deleteCategory","splice","created","fetchCategory","then","o"],"sources":["src/components/admin/CategoryComponent.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <h3 class=\"col-3\">Category</h3>\n        <button class=\"btn btn-success col-1\" @click=\"modalEvent('add')\">Thêm mới</button>\n      </div>\n      <table class=\"table text-light\">\n        <thead>\n          <tr class=\"row\">\n            <th class=\"col-4\" scope=\"col\">ID</th>\n            <th class=\"col-5\" scope=\"col\">Name</th>\n            <th class=\"col-2\" scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr class=\"row\" v-for=\"(d, index) in data\" :key=\"index\">\n            <th class=\"col-4\" scope=\"row\">{{ d.id }}</th>\n            <td class=\"col-5\">{{ d.name }}</td>\n            <td class=\"col-2 d-flex justify-content-end\">\n              <button class=\"btn btn-secondary\" @click=\"editModal(d)\">Sửa</button>\n              <button class=\"btn btn-danger ms-2\" @click=\"deleteModal(d)\">Xóa</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <!-- Modal -->\n      <div ref=\"modal\" id=\"modal\" class=\"modal\" v-show=\"isShow\" @click=\"hideModal\">\n        <!-- Add -->\n        <div class=\"modal-content\" v-show=\"button.add\">\n          <div class=\"row justify-content-end\">\n            <button class=\"btn-close me-3\" @click=\"modalEvent('add')\"></button>\n          </div>\n          <div class=\"p-4\">\n            <label for=\"name\" class=\"form-label\">Tên danh mục</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Tên danh mục\" v-model=\"dataModel.name\">\n          </div>\n          <button class=\"col-1 btn btn-success\" @click=\"addModel\">Thêm</button>\n        </div>\n        <!-- Edit -->\n        <div class=\"modal-content\" v-show=\"button.edit\">\n          <div class=\"row justify-content-end\">\n            <button class=\"btn-close me-3\" @click=\"modalEvent('edit')\"></button>\n          </div>\n          <div class=\"p-4\">\n            <label for=\"edit\" class=\"form-label\">Sửa danh mục</label>\n            <input ref=\"edit\" type=\"text\" class=\"form-control\" id=\"edit\" placeholder=\"Tên danh mục\"\n              @input=\"dataModel.name = $event.target.value\">\n          </div>\n          <button class=\"col-1 btn btn-primary\" @click=\"editModel()\">Sửa</button>\n        </div>\n        <!-- Delete -->\n        <div class=\"modal-content\" v-show=\"button.delete\">\n          <div class=\"row justify-content-end\">\n            <button class=\"btn-close me-3\" @click=\"modalEvent('delete')\"></button>\n          </div>\n          <div class=\"p-4\">\n            <label ref=\"titleDelete\" class=\"form-label text-danger fs-3 text-uppercase\">Xóa danh mục</label>\n          </div>\n          <button class=\"col-1 btn btn-danger\" @click=\"removeModel\">Xóa</button>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex'\nexport default {\n  data() {\n    return {\n      data: null,\n      dataModel: {\n        id: '',\n        name: ''\n      },\n      isShow: false,\n      button: {\n        add: false,\n        edit: false,\n        delete: false,\n      }\n    }\n  },\n  components: {\n\n  },\n  computed: {\n    ...mapState('category', ['category']),\n\n  },\n  methods: {\n    ...mapActions('category', ['fetchCategory', 'createCategory', 'updateCategory', 'deleteCategory']),\n    modalEvent(str) {\n      switch (str) {\n        case 'add':\n          this.isShow = !this.isShow;\n          this.button.add = !this.button.add;\n          break;\n        case 'edit':\n          this.isShow = !this.isShow;\n          this.button.edit = !this.button.edit;\n          break;\n        case 'delete':\n          this.isShow = !this.isShow;\n          this.button.delete = !this.button.delete;\n          break;\n      }\n    },\n    hideModal(event) {\n      if(event.target.id=='modal'){\n        this.$refs.modal.style.display = 'none'\n      }\n    },\n    editModal(data) {\n      this.dataModel.id = data.id;\n      this.dataModel.name = data.name;\n      this.isShow = !this.isShow;\n      this.button.edit = !this.button.edit;\n      const el = this.$refs.edit\n      el.value = data.name\n    },\n    deleteModal(data) {\n      this.dataModel.id = data.id;\n      this.isShow = !this.isShow;\n      this.button.delete = !this.button.delete;\n      const el = this.$refs.titleDelete\n      el.innerHTML = 'Bạn có muốn xóa danh mục ' + `<h1>${data.name}</h1>`\n    },\n    addModel() {\n      this.createCategory(this.dataModel)\n      this.isShow = !this.isShow;\n      this.button.add = !this.button.add;\n      console.log(this.data)\n    },\n    editModel() {\n      this.updateCategory(this.dataModel)\n      var i = 0;\n      while (i < this.data.length) {\n        if (this.data[i].id === this.dataModel.id) {\n          console.log(this.data[i]);\n          this.data[i].name = this.dataModel.name;\n          break;\n        } else {\n          ++i;\n        }\n      }\n      this.isShow = !this.isShow;\n      this.button.edit = !this.button.edit;\n    },\n    removeModel() {\n      this.deleteCategory(this.dataModel)\n      var i = 0;\n      while (i < this.data.length) {\n        if (this.data[i].id === this.dataModel.id) {\n          console.log(this.data[i]);\n          this.data.splice(i, 1);\n          break;\n        } else {\n          ++i;\n        }\n      }\n      this.isShow = !this.isShow;\n      this.button.delete = !this.button.delete;\n    }\n  },\n  created() {\n    this.fetchCategory().then((o) => this.data = o);\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.home {\n  min-height: 90vh;\n  background-color: #1a1a1a;\n  padding: 48px;\n  color: #ccc;\n\n  /* The Modal (background) */\n  .modal {\n    display: block;\n    /* Hidden by default */\n    position: fixed;\n    /* Stay in place */\n    z-index: 1;\n    /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%;\n    /* Full width */\n    height: 100%;\n    /* Full height */\n    overflow: auto;\n    /* Enable scroll if needed */\n    background-color: rgb(0, 0, 0);\n    /* Fallback color */\n    background-color: rgba(0, 0, 0, 0.4);\n\n    /* Black w/ opacity */\n    /* Modal Content/Box */\n    .modal-content {\n      background-color: #fefefe;\n      margin: 15% auto;\n      /* 15% from the top and centered */\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      /* Could be more or less, depending on screen size */\n\n      .form-label {\n        color: #333;\n      }\n    }\n  }\n\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}