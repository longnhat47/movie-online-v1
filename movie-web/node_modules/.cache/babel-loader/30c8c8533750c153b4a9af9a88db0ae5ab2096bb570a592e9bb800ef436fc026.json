{"ast":null,"code":"import axios from 'axios';\nimport env from \"../../env\";\nexport default class Http {\n  constructor(status) {\n    this.handlerEnabled = status && status.handlerEnabled ? status.handlerEnabled : false;\n    this.instance = axios.create({\n      baseURL: env.API_URL\n    });\n    return this.init();\n  }\n  async requestHandler(request) {\n    const store = require(\"@/store\");\n    console.log('store');\n    console.log(store.default.state);\n    // store.default.commit('RESET_USER')\n    // // const token = localStorage.getItem('token')\n    const token = store ? store.default.state.user.currentUser.token.access : null;\n    if (token) {\n      const res = await axios.post('http://127.0.0.1:8000/api/token/verify/', {\n        'token': token\n      });\n      if (res.status == 200) {\n        request.headers[\"Authorization\"] = `Bearer ${token}`;\n      } else if (res.status == 401) {\n        console.log('ok');\n        store.default.mu.commit('LOG_OUT');\n      }\n    }\n    return request;\n  }\n  errorHandler(error) {\n    if (error?.response?.status === 401) {\n      return error.response;\n    }\n    console.log(error);\n    return Promise.reject(error);\n  }\n  successHandler(response) {\n    if (this.handlerEnabled) {\n      return response; // TODO: Handle Success Response if need\n    }\n\n    return response;\n  }\n  init() {\n    this.instance.interceptors.request.use(request => this.requestHandler(request));\n    this.instance.interceptors.response.use(response => this.successHandler(response), error => this.errorHandler(error));\n    return this.instance;\n  }\n}","map":{"version":3,"names":["axios","env","Http","constructor","status","handlerEnabled","instance","create","baseURL","API_URL","init","requestHandler","request","store","require","console","log","default","state","token","user","currentUser","access","res","post","headers","mu","commit","errorHandler","error","response","Promise","reject","successHandler","interceptors","use"],"sources":["D:/nhatj/WorkSpace/MovieOnline/movie-web/src/services/http.init.js"],"sourcesContent":["import axios from 'axios'\nimport env from \"../../env\";\n\nexport default class Http {\n\n  constructor(status) {\n    this.handlerEnabled =\n      status && status.handlerEnabled ? status.handlerEnabled : false;\n    this.instance = axios.create({\n      baseURL: env.API_URL,\n    });\n    return this.init();\n  }\n\n  async requestHandler(request) {\n    const store = require(\"@/store\");\n    console.log('store')\n    console.log(store.default.state)\n        // store.default.commit('RESET_USER')\n        // // const token = localStorage.getItem('token')\n    const token = store ? store.default.state.user.currentUser.token.access : null;\n    if(token){\n      const res = await axios.post('http://127.0.0.1:8000/api/token/verify/', {'token': token})\n      if(res.status == 200){\n        request.headers[\"Authorization\"] = `Bearer ${token}`;\n      }\n      else if(res.status == 401){\n        console.log('ok')\n        store.default.mu.commit('LOG_OUT')\n      }\n    }\n    return request;\n  }\n\n  errorHandler(error) {\n    if (error?.response?.status === 401) {\n      return error.response\n    }\n    console.log(error)\n    return Promise.reject(error);\n  }\n\n  successHandler(response) {\n    if (this.handlerEnabled) {\n      return response; // TODO: Handle Success Response if need\n    }\n    return response;\n  }\n\n  init() {\n    this.instance.interceptors.request.use((request) =>\n      this.requestHandler(request)\n    );\n    this.instance.interceptors.response.use(\n      (response) => this.successHandler(response),\n      (error) => this.errorHandler(error)\n    );\n    return this.instance;\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,WAAW;AAE3B,eAAe,MAAMC,IAAI,CAAC;EAExBC,WAAWA,CAACC,MAAM,EAAE;IAClB,IAAI,CAACC,cAAc,GACjBD,MAAM,IAAIA,MAAM,CAACC,cAAc,GAAGD,MAAM,CAACC,cAAc,GAAG,KAAK;IACjE,IAAI,CAACC,QAAQ,GAAGN,KAAK,CAACO,MAAM,CAAC;MAC3BC,OAAO,EAAEP,GAAG,CAACQ;IACf,CAAC,CAAC;IACF,OAAO,IAAI,CAACC,IAAI,EAAE;EACpB;EAEA,MAAMC,cAAcA,CAACC,OAAO,EAAE;IAC5B,MAAMC,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;IAChCC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpBD,OAAO,CAACC,GAAG,CAACH,KAAK,CAACI,OAAO,CAACC,KAAK,CAAC;IAC5B;IACA;IACJ,MAAMC,KAAK,GAAGN,KAAK,GAAGA,KAAK,CAACI,OAAO,CAACC,KAAK,CAACE,IAAI,CAACC,WAAW,CAACF,KAAK,CAACG,MAAM,GAAG,IAAI;IAC9E,IAAGH,KAAK,EAAC;MACP,MAAMI,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,yCAAyC,EAAE;QAAC,OAAO,EAAEL;MAAK,CAAC,CAAC;MACzF,IAAGI,GAAG,CAACnB,MAAM,IAAI,GAAG,EAAC;QACnBQ,OAAO,CAACa,OAAO,CAAC,eAAe,CAAC,GAAI,UAASN,KAAM,EAAC;MACtD,CAAC,MACI,IAAGI,GAAG,CAACnB,MAAM,IAAI,GAAG,EAAC;QACxBW,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;QACjBH,KAAK,CAACI,OAAO,CAACS,EAAE,CAACC,MAAM,CAAC,SAAS,CAAC;MACpC;IACF;IACA,OAAOf,OAAO;EAChB;EAEAgB,YAAYA,CAACC,KAAK,EAAE;IAClB,IAAIA,KAAK,EAAEC,QAAQ,EAAE1B,MAAM,KAAK,GAAG,EAAE;MACnC,OAAOyB,KAAK,CAACC,QAAQ;IACvB;IACAf,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;IAClB,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;EAC9B;EAEAI,cAAcA,CAACH,QAAQ,EAAE;IACvB,IAAI,IAAI,CAACzB,cAAc,EAAE;MACvB,OAAOyB,QAAQ,CAAC,CAAC;IACnB;;IACA,OAAOA,QAAQ;EACjB;EAEApB,IAAIA,CAAA,EAAG;IACL,IAAI,CAACJ,QAAQ,CAAC4B,YAAY,CAACtB,OAAO,CAACuB,GAAG,CAAEvB,OAAO,IAC7C,IAAI,CAACD,cAAc,CAACC,OAAO,CAAC,CAC7B;IACD,IAAI,CAACN,QAAQ,CAAC4B,YAAY,CAACJ,QAAQ,CAACK,GAAG,CACpCL,QAAQ,IAAK,IAAI,CAACG,cAAc,CAACH,QAAQ,CAAC,EAC1CD,KAAK,IAAK,IAAI,CAACD,YAAY,CAACC,KAAK,CAAC,CACpC;IACD,OAAO,IAAI,CAACvB,QAAQ;EACtB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}