{"ast":null,"code":"import { mapActions, mapState } from 'vuex';\nimport Vue from 'vue';\nexport default {\n  components: {},\n  computed: {\n    ...mapState('movie', ['movie'])\n  },\n  methods: {\n    ...mapActions('movie', ['fetchMovieDetail']),\n    debounce: (callback, duration) => {\n      var timer;\n      return function (event) {\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n          callback(event);\n        }, duration);\n      };\n    },\n    buildVideoPlayer: id => {\n      return new Vue({\n        el: `#${id}`,\n        data: {\n          media: null,\n          seekbar: null,\n          seekbarWidth: 0,\n          seekbarOffsetX: 0,\n          time: 0,\n          duration: 0,\n          isPlaying: false,\n          isGrabbingSeekbar: false\n        },\n        mounted: function () {\n          // init\n          this.media = this.$el.querySelector('.p-video-player__media');\n          this.seekbar = this.$el.querySelector('.p-video-player__seekbar-wrap');\n          this.reLayoutSeekbar();\n\n          // addEventListener\n          window.addEventListener('resize', debounce(() => {\n            this.reLayoutSeekbar();\n          }), 100);\n          document.addEventListener('mousemove', event => {\n            this.moveSeekbar(event);\n          });\n          document.addEventListener('mouseup', event => {\n            this.releaseSeekbar(event);\n          });\n          this.media.addEventListener('loadedmetadata', () => {\n            this.duration = this.media.duration;\n          });\n          this.media.addEventListener('ended', () => {\n            this.media.currentTime = 0;\n            this.isPlaying = false;\n          });\n        },\n        computed: {\n          getProgressRate: function () {\n            return this.time / this.duration;\n          },\n          getCurrentTime: function () {\n            return this.convertSecondsToTime(this.time);\n          },\n          getDuration: function () {\n            return this.convertSecondsToTime(this.duration);\n          }\n        },\n        methods: {\n          play: function () {\n            this.media.play();\n            this.isPlaying = true;\n            this.loop();\n          },\n          pause: function () {\n            this.media.pause();\n            this.isPlaying = false;\n          },\n          playOrPause: function () {\n            if (this.isPlaying) {\n              this.pause();\n            } else {\n              this.play();\n            }\n          },\n          stop: function () {\n            this.media.currentTime = 0;\n            this.pause();\n          },\n          loop: function () {\n            this.time = this.media.currentTime;\n            if (!this.isPlaying) return;\n            requestAnimationFrame(() => {\n              this.loop();\n            });\n          },\n          grabSeekbar: function (event) {\n            event.preventDefault();\n            this.isGrabbingSeekbar = true;\n            this.time = this.media.currentTime = event.layerX / this.seekbarWidth * this.duration;\n            this.media.pause();\n          },\n          moveSeekbar: function (event) {\n            event.preventDefault();\n            if (!this.isGrabbingSeekbar) return;\n            this.time = this.media.currentTime = (event.clientX - this.seekbarOffsetX - window.pageXOffset) / this.seekbarWidth * this.duration;\n          },\n          releaseSeekbar: function (event) {\n            event.preventDefault();\n            this.isGrabbingSeekbar = false;\n            if (this.isPlaying) {\n              this.media.play();\n            }\n          },\n          reLayoutSeekbar: function () {\n            this.seekbarWidth = this.seekbar.clientWidth;\n            this.seekbarOffsetX = this.seekbar.getBoundingClientRect().left;\n          },\n          convertSecondsToTime: function (time) {\n            let seconds = Math.floor(time % 60);\n            if (seconds < 10) seconds = '0' + seconds;\n            let minutes = Math.floor(time / 60 % 60);\n            return `${minutes}:${seconds}`;\n          }\n        }\n      });\n    }\n  },\n  mounted() {\n    this.buildVideoPlayer('video-player');\n  },\n  created() {\n    this.fetchMovieDetail(this.$route.params.id);\n  }\n};","map":{"version":3,"names":["mapActions","mapState","Vue","components","computed","methods","debounce","callback","duration","timer","event","clearTimeout","setTimeout","buildVideoPlayer","id","el","data","media","seekbar","seekbarWidth","seekbarOffsetX","time","isPlaying","isGrabbingSeekbar","mounted","$el","querySelector","reLayoutSeekbar","window","addEventListener","document","moveSeekbar","releaseSeekbar","currentTime","getProgressRate","getCurrentTime","convertSecondsToTime","getDuration","play","loop","pause","playOrPause","stop","requestAnimationFrame","grabSeekbar","preventDefault","layerX","clientX","pageXOffset","clientWidth","getBoundingClientRect","left","seconds","Math","floor","minutes","created","fetchMovieDetail","$route","params"],"sources":["D:\\nhatj\\WorkSpace\\movie-web\\src\\components\\WatchMovieComponent.vue"],"sourcesContent":["<template>\n  <div class=\"movie-detail\">\n    <div class=\"container text-center\">\n      <h1>{{ movie.name }}</h1>\n      <div class=\"l-page\">\n        <h1 class=\"c-content-header\">vue video player</h1>\n        <div class=\"p-video-player\" id=\"video-player\">\n          <video class=\"p-video-player__media\">\n            <source src=\"http://www.tplh.net/file/sample.mp4\" />\n          </video>\n          <div class=\"p-video-player__seekbar-wrap\" id=\"video-player-media\" @mousedown=\"grabSeekbar\"\n            @touchstart=\"grabSeekbar\" @touchmove=\"moveSeekbar\" @touchend=\"releaseSeekbar\">\n            <div class=\"p-video-player__seekbar-current\" :style=\"{ transform: 'scaleX(' + getProgressRate + ')' }\"></div>\n            <div class=\"p-video-player__seekbar-back\"></div>\n          </div>\n          <div class=\"p-video-player__control-panel\">\n            <button class=\"p-video-player__btn\" @click=\"playOrPause\">{{ isPlaying ? 'pause' : 'play' }}</button>\n            <button class=\"p-video-player__btn\" @click=\"stop\">stop</button>\n            <div class=\"p-video-player__time-wrap\"><span class=\"p-video-player__time-current\">{{ getCurrentTime\n            }}</span>/<span class=\"p-video-player__time-all\">{{ getDuration }}</span></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex'\nimport Vue from 'vue'\nexport default {\n  components: {\n  },\n  computed: {\n    ...mapState('movie', ['movie'])\n  },\n  methods: {\n    ...mapActions('movie', ['fetchMovieDetail']),\n    debounce: (callback, duration) => {\n      var timer;\n      return function (event) {\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n          callback(event);\n        }, duration);\n      };\n    },\n\n    buildVideoPlayer: (id) => {\n      return new Vue({\n        el: `#${id}`,\n        data: {\n          media: null,\n          seekbar: null,\n          seekbarWidth: 0,\n          seekbarOffsetX: 0,\n          time: 0,\n          duration: 0,\n          isPlaying: false,\n          isGrabbingSeekbar: false,\n        },\n        mounted: function () {\n          // init\n          this.media = this.$el.querySelector('.p-video-player__media');\n          this.seekbar = this.$el.querySelector('.p-video-player__seekbar-wrap');\n          this.reLayoutSeekbar();\n\n          // addEventListener\n          window.addEventListener('resize', debounce(() => {\n            this.reLayoutSeekbar();\n          }), 100);\n          document.addEventListener('mousemove', (event) => {\n            this.moveSeekbar(event);\n          });\n          document.addEventListener('mouseup', (event) => {\n            this.releaseSeekbar(event);\n          });\n          this.media.addEventListener('loadedmetadata', () => {\n            this.duration = this.media.duration;\n          });\n          this.media.addEventListener('ended', () => {\n            this.media.currentTime = 0;\n            this.isPlaying = false;\n          });\n        },\n        computed: {\n          getProgressRate: function () {\n            return this.time / this.duration;\n          },\n          getCurrentTime: function () {\n            return this.convertSecondsToTime(this.time);\n          },\n          getDuration: function () {\n            return this.convertSecondsToTime(this.duration);\n          },\n        },\n        methods: {\n          play: function () {\n            this.media.play();\n            this.isPlaying = true;\n            this.loop();\n          },\n          pause: function () {\n            this.media.pause();\n            this.isPlaying = false;\n          },\n          playOrPause: function () {\n            if (this.isPlaying) {\n              this.pause();\n            } else {\n              this.play();\n            }\n          },\n          stop: function () {\n            this.media.currentTime = 0;\n            this.pause();\n          },\n          loop: function () {\n            this.time = this.media.currentTime;\n            if (!this.isPlaying) return;\n            requestAnimationFrame(() => {\n              this.loop();\n            });\n          },\n          grabSeekbar: function (event) {\n            event.preventDefault();\n            this.isGrabbingSeekbar = true;\n            this.time = this.media.currentTime = event.layerX / this.seekbarWidth * this.duration;\n            this.media.pause();\n          },\n          moveSeekbar: function (event) {\n            event.preventDefault();\n            if (!this.isGrabbingSeekbar) return;\n            this.time = this.media.currentTime =\n              (event.clientX - this.seekbarOffsetX - window.pageXOffset)\n              / this.seekbarWidth * this.duration;\n          },\n          releaseSeekbar: function (event) {\n            event.preventDefault();\n            this.isGrabbingSeekbar = false;\n            if (this.isPlaying) {\n              this.media.play();\n            }\n          },\n          reLayoutSeekbar: function () {\n            this.seekbarWidth = this.seekbar.clientWidth;\n            this.seekbarOffsetX = this.seekbar.getBoundingClientRect().left;\n          },\n          convertSecondsToTime: function (time) {\n            let seconds = Math.floor(time % 60);\n            if (seconds < 10) seconds = '0' + seconds;\n            let minutes = Math.floor(time / 60 % 60);\n            return `${minutes}:${seconds}`\n          },\n        }\n      });\n    },\n\n  },\n  mounted() {\n    this.buildVideoPlayer('video-player')\n  },\n  created() {\n    this.fetchMovieDetail(this.$route.params.id)\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.l-page {\n  max-width: 1024px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.c-content-header {\n  margin-top: 0;\n  font-size: 2em;\n  font-weight: 400;\n}\n\n.p-video-player {\n  &__media {\n    width: 100%;\n    display: block;\n  }\n\n  &__seekbar {\n    &-wrap {\n      cursor: pointer;\n      position: relative;\n      margin-bottom: 10px;\n      padding: 10px 0;\n    }\n\n    &-current,\n    &-back {\n      height: 3px;\n      position: absolute;\n      top: 10px;\n      right: 0;\n      left: 0;\n    }\n\n    &-current {\n      z-index: 2;\n      background-color: #111;\n      transform: scaleX(0);\n      transform-origin: left;\n    }\n\n    &-back {\n      background-color: #ddd;\n    }\n  }\n\n  &__control-panel {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n  }\n\n  &__btn {\n    width: 5em;\n    margin-right: 2px;\n    padding: 0.5em 0;\n  }\n\n  &__time {\n    &-wrap {\n      margin-left: 1em;\n    }\n\n    &-current {\n      margin-right: 0.25em;\n    }\n\n    &-all {\n      margin-left: 0.25em;\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}