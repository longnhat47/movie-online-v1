{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions, mapState } from 'vuex';\nexport default {\n  data() {\n    return {\n      data: null,\n      dataModel: {\n        id: '',\n        full_name: '',\n        birthday: '',\n        email: '',\n        image: '',\n        password: '',\n        re_password: ''\n      },\n      isShow: false,\n      button: {\n        add: false,\n        edit: false,\n        delete: false\n      }\n    };\n  },\n  computed: {\n    ...mapState('user', ['users'])\n  },\n  methods: {\n    ...mapActions('user', ['fetchUser', 'createUser', 'updateUser', 'deleteUser']),\n    modalEvent(str) {\n      switch (str) {\n        case 'add':\n          this.isShow = !this.isShow;\n          this.button.add = !this.button.add;\n          break;\n        case 'edit':\n          this.isShow = !this.isShow;\n          this.button.edit = !this.button.edit;\n          break;\n        case 'delete':\n          this.isShow = !this.isShow;\n          this.button.delete = !this.button.delete;\n          break;\n      }\n    },\n    hideModal(event) {\n      if (event.target.id == 'modal') {\n        this.$refs.modal.style.display = 'none';\n      }\n    },\n    editModal(data) {\n      for (const key of Object.keys(this.dataModel)) {\n        this.dataModel[key] = data[key];\n      }\n      this.isShow = !this.isShow;\n      this.button.edit = !this.button.edit;\n    },\n    deleteModal(data) {\n      this.dataModel.id = data.id;\n      this.isShow = !this.isShow;\n      this.button.delete = !this.button.delete;\n      const el = this.$refs.titleDelete;\n      el.innerHTML = 'Bạn có muốn xóa người dùng ' + `<h1>${data.email}</h1>`;\n    },\n    addModel() {\n      // this.createUser(this.dataModel)\n      this.isShow = !this.isShow;\n      this.button.add = !this.button.add;\n      console.log(this.data);\n    },\n    async editModel() {\n      // if (this.dataModel.image == null) {\n      //   delete this.dataModel.image\n      // }\n      // const dt = JSON.stringify(this.dataModel)\n      // console.log(dt)\n      console.log('data component');\n      console.log(this.dataModel);\n      await this.updateUser(this.dataModel);\n      // console.log(res)\n      // var i = 0;\n      // while (i < this.data.length) {\n      //   if (this.data[i].id === this.dataModel.id) {\n      //     for(const key of Object.keys(this.data)){\n      //       this.data[i][key] = res.data[key];\n      //     }\n\n      //     console.log(this.data[i])\n      //     console.log(this.dataModel)\n      //     break;\n      //   } else {\n      //     ++i;\n      //   }\n      // }\n      this.isShow = !this.isShow;\n      this.button.edit = !this.button.edit;\n    },\n    removeModel() {\n      this.deleteUser(this.dataModel);\n      var i = 0;\n      while (i < this.data.length) {\n        if (this.data[i].id === this.dataModel.id) {\n          console.log(this.data[i]);\n          this.data.splice(i, 1);\n          break;\n        } else {\n          ++i;\n        }\n      }\n      this.isShow = !this.isShow;\n      this.button.delete = !this.button.delete;\n    },\n    getImage() {\n      this.dataModel.image = this.$refs.imageFile.files[0];\n    }\n  },\n  created() {\n    this.fetchUser().then(o => this.data = o);\n  }\n};","map":{"version":3,"names":["mapActions","mapState","data","dataModel","id","full_name","birthday","email","image","password","re_password","isShow","button","add","edit","delete","computed","methods","modalEvent","str","hideModal","event","target","$refs","modal","style","display","editModal","key","Object","keys","deleteModal","el","titleDelete","innerHTML","addModel","console","log","editModel","updateUser","removeModel","deleteUser","i","length","splice","getImage","imageFile","files","created","fetchUser","then","o"],"sources":["src/components/admin/UserComponent.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <h3 class=\"col-3\">User</h3>\n        <button class=\"btn btn-success col-3\" @click=\"modalEvent('add')\">Thêm mới tài khoản staff</button>\n      </div>\n      <table class=\"table text-light\">\n        <thead>\n          <tr class=\"row\">\n            <th class=\"col-1\" scope=\"col\">ID</th>\n            <th class=\"col-2\" scope=\"col\">Email</th>\n            <th class=\"col-3\" scope=\"col\">FullName</th>\n            <th class=\"col-2\" scope=\"col\">BirthDay</th>\n            <th class=\"col-1\" scope=\"col\">Image</th>\n            <th class=\"col-1\" scope=\"col\">Status</th>\n            <th class=\"col-2\" scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr class=\"row\" v-for=\"(d, index) in data\" :key=\"index\">\n            <th class=\"col-1\" scope=\"row\">{{ d.id }}</th>\n            <td class=\"col-2\">{{ d.email }}</td>\n            <td class=\"col-3\">{{ d.full_name }}</td>\n            <td class=\"col-2\">{{ d.birthday }}</td>\n            <td class=\"col-1\">\n              <img :src=\"d.image\" alt=\"image\" style=\"height: 50px;\">\n            </td>\n            <td class=\"col-1\">\n              <input type=\"checkbox\" name=\"status\" id=\"user-status\" class=\"form-check-input\" :checked=\"d.is_active\">\n            </td>\n            <td class=\"col-2 d-flex justify-content-end\">\n              <button class=\"btn btn-secondary\" @click=\"editModal(d)\">Sửa</button>\n              <button class=\"btn btn-danger ms-2\" @click=\"deleteModal(d)\">Xóa</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <!-- Modal -->\n      <div ref=\"modal\" id=\"modal\" class=\"modal\" v-show=\"isShow\" @click=\"hideModal\">\n        <!-- Add -->\n        <div class=\"modal-content\" v-show=\"button.add\">\n          <div class=\"row justify-content-end\">\n            <button class=\"btn-close me-3\" @click=\"modalEvent('add')\"></button>\n          </div>\n          <div class=\"p-2\">\n            <label for=\"name\" class=\"form-label\">Họ tên</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Họ tên\" v-model=\"dataModel.name\">\n          </div>\n          <div class=\"p-2\">\n            <label for=\"name\" class=\"form-label\">Ngày sinh</label>\n            <input type=\"date\" class=\"form-control\" id=\"name\" v-model=\"dataModel.name\">\n          </div>\n          <div class=\"p-2\">\n            <label for=\"email\" class=\"form-label\">Email</label>\n            <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"email@example.com\" v-model=\"dataModel.email\">\n          </div>\n          <div class=\"p-2\">\n            <label for=\"password\" class=\"form-label\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"dataModel.password\">\n          </div>\n          <div class=\"p-2\">\n            <label for=\"re-password\" class=\"form-label\">Xác nhận password</label>\n            <input type=\"password\" class=\"form-control\" id=\"re-password\" v-model=\"dataModel.re_password\">\n          </div>\n          <button class=\"col-1 btn btn-success\" @click=\"addModel\">Thêm</button>\n        </div>\n        <!-- Edit -->\n        <div class=\"modal-content\" v-show=\"button.edit\">\n          <div class=\"row justify-content-end\">\n            <button class=\"btn-close me-3\" @click=\"modalEvent('edit')\"></button>\n          </div>\n          <div class=\"p-2\">\n            <label for=\"name-edit\" class=\"form-label\">Họ tên</label>\n            <input type=\"text\" class=\"form-control\" id=\"name-edit\" placeholder=\"Họ tên\" :value=\"dataModel.full_name\"\n              @change=\"dataModel.full_name = $event.target.value\">\n          </div>\n          <div class=\"p-2\">\n            <label for=\"birthday\" class=\"form-label\">Ngày sinh</label>\n            <input type=\"date\" class=\"form-control\" id=\"birthday\" :value=\"dataModel.birthday\"\n              @change=\"dataModel.birthday = $event.target.value\">\n          </div>\n          <div class=\"p-2\">\n            <label for=\"email-edit\" class=\"form-label\">Email</label>\n            <input type=\"email\" class=\"form-control\" id=\"email-edit\" placeholder=\"email@example.com\" :value=\"dataModel.email\"\n              @change=\"dataModel.email = $event.target.value\">\n          </div>\n          <div class=\"p-2\">\n            <label for=\"image\" class=\"form-label\">Image</label>\n            <input ref=\"imageFile\" type=\"file\" class=\"form-control\" id=\"image\" @change=\"getImage\">\n          </div>\n          <button class=\"col-1 btn btn-primary\" @click=\"editModel()\">Sửa</button>\n        </div>\n        <!-- Delete -->\n        <div class=\"modal-content\" v-show=\"button.delete\">\n          <div class=\"row justify-content-end\">\n            <button class=\"btn-close me-3\" @click=\"modalEvent('delete')\"></button>\n          </div>\n          <div class=\"p-4\">\n            <label ref=\"titleDelete\" class=\"form-label text-danger fs-3 text-uppercase\">Xóa danh mục</label>\n          </div>\n          <button class=\"col-1 btn btn-danger\" @click=\"removeModel\">Xóa</button>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex'\nexport default {\n  data() {\n    return {\n      data: null,\n      dataModel: {\n        id: '',\n        full_name: '',\n        birthday: '',\n        email: '',\n        image: '',\n        password: '',\n        re_password: ''\n      },\n      isShow: false,\n      button: {\n        add: false,\n        edit: false,\n        delete: false,\n      }\n    }\n  },\n  computed: {\n    ...mapState('user', ['users']),\n\n  },\n  methods: {\n    ...mapActions('user', ['fetchUser', 'createUser', 'updateUser', 'deleteUser']),\n    modalEvent(str) {\n      switch (str) {\n        case 'add':\n          this.isShow = !this.isShow;\n          this.button.add = !this.button.add;\n          break;\n        case 'edit':\n          this.isShow = !this.isShow;\n          this.button.edit = !this.button.edit;\n          break;\n        case 'delete':\n          this.isShow = !this.isShow;\n          this.button.delete = !this.button.delete;\n          break;\n      }\n    },\n    hideModal(event) {\n      if (event.target.id == 'modal') {\n        this.$refs.modal.style.display = 'none'\n      }\n    },\n    editModal(data) {\n      for(const key of Object.keys(this.dataModel)) {\n        this.dataModel[key] = data[key];\n      }\n      this.isShow = !this.isShow;\n      this.button.edit = !this.button.edit;\n    },\n    deleteModal(data) {\n      this.dataModel.id = data.id;\n      this.isShow = !this.isShow;\n      this.button.delete = !this.button.delete;\n      const el = this.$refs.titleDelete\n      el.innerHTML = 'Bạn có muốn xóa người dùng ' + `<h1>${data.email}</h1>`\n    },\n    addModel() {\n      // this.createUser(this.dataModel)\n      this.isShow = !this.isShow;\n      this.button.add = !this.button.add;\n      console.log(this.data)\n    },\n    async editModel() {\n      // if (this.dataModel.image == null) {\n      //   delete this.dataModel.image\n      // }\n      // const dt = JSON.stringify(this.dataModel)\n      // console.log(dt)\n      console.log('data component')\n      console.log(this.dataModel)\n\n      await this.updateUser(this.dataModel)\n      // console.log(res)\n      // var i = 0;\n      // while (i < this.data.length) {\n      //   if (this.data[i].id === this.dataModel.id) {\n      //     for(const key of Object.keys(this.data)){\n      //       this.data[i][key] = res.data[key];\n      //     }\n\n      //     console.log(this.data[i])\n      //     console.log(this.dataModel)\n      //     break;\n      //   } else {\n      //     ++i;\n      //   }\n      // }\n      this.isShow = !this.isShow;\n      this.button.edit = !this.button.edit;\n    },\n    removeModel() {\n      this.deleteUser(this.dataModel)\n      var i = 0;\n      while (i < this.data.length) {\n        if (this.data[i].id === this.dataModel.id) {\n          console.log(this.data[i]);\n          this.data.splice(i, 1);\n          break;\n        } else {\n          ++i;\n        }\n      }\n      this.isShow = !this.isShow;\n      this.button.delete = !this.button.delete;\n    },\n    getImage() {\n      this.dataModel.image = this.$refs.imageFile.files[0]\n    }\n  },\n  created() {\n    this.fetchUser().then((o) => this.data = o);\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.home {\n  min-height: 90vh;\n  background-color: #1a1a1a;\n  padding: 48px;\n  color: #ccc;\n\n  /* The Modal (background) */\n  .modal {\n    display: block;\n    /* Hidden by default */\n    position: fixed;\n    /* Stay in place */\n    z-index: 1;\n    /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%;\n    /* Full width */\n    height: 100%;\n    /* Full height */\n    overflow: auto;\n    /* Enable scroll if needed */\n    background-color: rgb(0, 0, 0);\n    /* Fallback color */\n    background-color: rgba(0, 0, 0, 0.4);\n\n    /* Black w/ opacity */\n    /* Modal Content/Box */\n    .modal-content {\n      background-color: #fefefe;\n      margin: 15% auto;\n      /* 15% from the top and centered */\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      /* Could be more or less, depending on screen size */\n\n      .form-label {\n        color: #333;\n      }\n    }\n  }\n\n}</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA,SAAAA,UAAA,EAAAC,QAAA;AACA;EACAC,KAAA;IACA;MACAA,IAAA;MACAC,SAAA;QACAC,EAAA;QACAC,SAAA;QACAC,QAAA;QACAC,KAAA;QACAC,KAAA;QACAC,QAAA;QACAC,WAAA;MACA;MACAC,MAAA;MACAC,MAAA;QACAC,GAAA;QACAC,IAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,GAAAf,QAAA;EAEA;EACAgB,OAAA;IACA,GAAAjB,UAAA;IACAkB,WAAAC,GAAA;MACA,QAAAA,GAAA;QACA;UACA,KAAAR,MAAA,SAAAA,MAAA;UACA,KAAAC,MAAA,CAAAC,GAAA,SAAAD,MAAA,CAAAC,GAAA;UACA;QACA;UACA,KAAAF,MAAA,SAAAA,MAAA;UACA,KAAAC,MAAA,CAAAE,IAAA,SAAAF,MAAA,CAAAE,IAAA;UACA;QACA;UACA,KAAAH,MAAA,SAAAA,MAAA;UACA,KAAAC,MAAA,CAAAG,MAAA,SAAAH,MAAA,CAAAG,MAAA;UACA;MAAA;IAEA;IACAK,UAAAC,KAAA;MACA,IAAAA,KAAA,CAAAC,MAAA,CAAAlB,EAAA;QACA,KAAAmB,KAAA,CAAAC,KAAA,CAAAC,KAAA,CAAAC,OAAA;MACA;IACA;IACAC,UAAAzB,IAAA;MACA,WAAA0B,GAAA,IAAAC,MAAA,CAAAC,IAAA,MAAA3B,SAAA;QACA,KAAAA,SAAA,CAAAyB,GAAA,IAAA1B,IAAA,CAAA0B,GAAA;MACA;MACA,KAAAjB,MAAA,SAAAA,MAAA;MACA,KAAAC,MAAA,CAAAE,IAAA,SAAAF,MAAA,CAAAE,IAAA;IACA;IACAiB,YAAA7B,IAAA;MACA,KAAAC,SAAA,CAAAC,EAAA,GAAAF,IAAA,CAAAE,EAAA;MACA,KAAAO,MAAA,SAAAA,MAAA;MACA,KAAAC,MAAA,CAAAG,MAAA,SAAAH,MAAA,CAAAG,MAAA;MACA,MAAAiB,EAAA,QAAAT,KAAA,CAAAU,WAAA;MACAD,EAAA,CAAAE,SAAA,0CAAAhC,IAAA,CAAAK,KAAA;IACA;IACA4B,SAAA;MACA;MACA,KAAAxB,MAAA,SAAAA,MAAA;MACA,KAAAC,MAAA,CAAAC,GAAA,SAAAD,MAAA,CAAAC,GAAA;MACAuB,OAAA,CAAAC,GAAA,MAAAnC,IAAA;IACA;IACA,MAAAoC,UAAA;MACA;MACA;MACA;MACA;MACA;MACAF,OAAA,CAAAC,GAAA;MACAD,OAAA,CAAAC,GAAA,MAAAlC,SAAA;MAEA,WAAAoC,UAAA,MAAApC,SAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAQ,MAAA,SAAAA,MAAA;MACA,KAAAC,MAAA,CAAAE,IAAA,SAAAF,MAAA,CAAAE,IAAA;IACA;IACA0B,YAAA;MACA,KAAAC,UAAA,MAAAtC,SAAA;MACA,IAAAuC,CAAA;MACA,OAAAA,CAAA,QAAAxC,IAAA,CAAAyC,MAAA;QACA,SAAAzC,IAAA,CAAAwC,CAAA,EAAAtC,EAAA,UAAAD,SAAA,CAAAC,EAAA;UACAgC,OAAA,CAAAC,GAAA,MAAAnC,IAAA,CAAAwC,CAAA;UACA,KAAAxC,IAAA,CAAA0C,MAAA,CAAAF,CAAA;UACA;QACA;UACA,EAAAA,CAAA;QACA;MACA;MACA,KAAA/B,MAAA,SAAAA,MAAA;MACA,KAAAC,MAAA,CAAAG,MAAA,SAAAH,MAAA,CAAAG,MAAA;IACA;IACA8B,SAAA;MACA,KAAA1C,SAAA,CAAAK,KAAA,QAAAe,KAAA,CAAAuB,SAAA,CAAAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA,GAAAC,IAAA,CAAAC,CAAA,SAAAjD,IAAA,GAAAiD,CAAA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}