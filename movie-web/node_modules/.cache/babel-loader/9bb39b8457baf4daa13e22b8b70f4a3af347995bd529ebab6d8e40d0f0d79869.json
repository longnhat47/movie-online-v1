{"ast":null,"code":"import { mapActions, mapState } from 'vuex';\nimport moment from 'moment';\nimport API_MEDIA from '../../env';\nexport default {\n  data() {\n    return {\n      img: API_MEDIA,\n      title: '',\n      comment: ''\n    };\n  },\n  computed: {\n    ...mapState('movie', ['movie'])\n  },\n  methods: {\n    ...mapActions('movie', ['fetchMovieDetail', 'updateViewMovie']),\n    ...mapActions('comment', ['createComment']),\n    formatDate(value) {\n      if (value) {\n        return moment(String(value)).format('MM/DD/YYYY hh:mm');\n      }\n      return 'NAN';\n    },\n    commentFunc() {\n      // this.createComment({movie: this.$route.params.id, content: this.comment})\n      this.$router.go(this.$router.currentRoute);\n    }\n  },\n  created() {\n    this.fetchMovieDetail(this.$route.params.id).then(o => {\n      this.title = o.category.name + '>' + o.name;\n    }).finally(() => this.updateViewMovie(this.$route.params.id));\n  }\n};","map":{"version":3,"names":["mapActions","mapState","moment","API_MEDIA","data","img","title","comment","computed","methods","formatDate","value","String","format","commentFunc","$router","go","currentRoute","created","fetchMovieDetail","$route","params","id","then","o","category","name","finally","updateViewMovie"],"sources":["D:\\nhatj\\WorkSpace\\MovieOnline\\movie-web\\src\\components\\WatchMovieComponent.vue"],"sourcesContent":["<template>\n  <div class=\"movie-detail mt-5\">\n    <div class=\"container\">\n      <p class=\"movie-name\">Xem phim>{{ title }}</p>\n      <video :src=\"movie.video\" controls class=\"video object-fit-fill\"></video>\n      <p class=\"movie-desc mt-3\">Mô tả: {{ movie.description }}</p>\n      <div class=\"review mt-5 mb-5\">\n        <div class=\"review-form\">\n          <p>Bình luận</p>\n          <div class=\"form-floating\">\n            <textarea class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea2\"\n              style=\"height: 100px\" v-model=\"comment\"></textarea>\n            <label for=\"floatingTextarea2\">Comments</label>\n          </div>\n          <button class=\"btn btn-primary mt-2\" @click=\"commentFunc\">Bình luận</button>\n        </div>\n        <div class=\"review-item mt-5\" v-for=\"c in movie.comment\" :key=\"c.id\">\n          <div class=\"row d-flex\">\n            <div class=\"row col-2\">\n              <div class=\"col-4\">\n                <img :src=\"'http://127.0.0.1:8000' + c.user.image\" alt=\"user\"\n                  class=\"rounded-circle object-fit-cover user-img-comment\">\n              </div>\n              <div class=\"row col-8\">\n                <p class=\"user-name-comment\">{{ c.user.full_name }}</p>\n                <p class=\"comment\">{{ c.content }}</p>\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <p class=\"comment-date\">{{ formatDate(c.created_at) }}</p>\n            </div>\n          </div>\n          <hr>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex'\nimport moment from 'moment'\nimport API_MEDIA from '../../env'\n\nexport default {\n  data() {\n    return {\n      img: API_MEDIA,\n      title: '',\n      comment: ''\n    }\n  },\n  computed: {\n    ...mapState('movie', ['movie']),\n  },\n  methods: {\n    ...mapActions('movie', ['fetchMovieDetail', 'updateViewMovie']),\n    ...mapActions('comment', ['createComment']),\n    formatDate(value) {\n      if (value) {\n        return moment(String(value)).format('MM/DD/YYYY hh:mm')\n      }\n      return 'NAN'\n    },\n    commentFunc(){\n      // this.createComment({movie: this.$route.params.id, content: this.comment})\n      this.$router.go(this.$router.currentRoute)\n    }\n  },\n  created() {\n    this.fetchMovieDetail(this.$route.params.id).then((o) => {\n      this.title = o.category.name+'>'+ o.name\n    }).finally(() => this.updateViewMovie(this.$route.params.id))\n\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.movie-detail {\n  min-height: 100vh;\n\n  .movie-name {\n    font-size: 22px;\n  }\n\n  .video {\n    max-width: 100%;\n  }\n\n  .review {\n    .review-item {\n      .user-img-comment{\n        width: 100%;\n        min-height: 50%;\n      }\n      .user-name-comment {\n        display: block;\n        padding-left: 0;\n        font-size: 18px;\n      }\n\n      .comment-date {\n        font-size: 12px;\n        color: cadetblue;\n      }\n    }\n  }\n}</style>\n"],"mappings":"AAwCA,SAASA,UAAU,EAAEC,QAAO,QAAS,MAAK;AAC1C,OAAOC,MAAK,MAAO,QAAO;AAC1B,OAAOC,SAAQ,MAAO,WAAU;AAEhC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAEF,SAAS;MACdG,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGP,QAAQ,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;EAChC,CAAC;EACDQ,OAAO,EAAE;IACP,GAAGT,UAAU,CAAC,OAAO,EAAE,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;IAC/D,GAAGA,UAAU,CAAC,SAAS,EAAE,CAAC,eAAe,CAAC,CAAC;IAC3CU,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAIA,KAAK,EAAE;QACT,OAAOT,MAAM,CAACU,MAAM,CAACD,KAAK,CAAC,CAAC,CAACE,MAAM,CAAC,kBAAkB;MACxD;MACA,OAAO,KAAI;IACb,CAAC;IACDC,WAAWA,CAAA,EAAE;MACX;MACA,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,IAAI,CAACD,OAAO,CAACE,YAAY;IAC3C;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAK;MACvD,IAAI,CAAClB,KAAI,GAAIkB,CAAC,CAACC,QAAQ,CAACC,IAAI,GAAC,GAAG,GAAEF,CAAC,CAACE,IAAG;IACzC,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,IAAI,CAACC,eAAe,CAAC,IAAI,CAACR,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;EAE9D;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}