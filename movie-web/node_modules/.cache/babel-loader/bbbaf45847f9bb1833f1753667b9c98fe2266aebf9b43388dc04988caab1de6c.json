{"ast":null,"code":"import BaseService from \"@/services/base\";\nclass UserService extends BaseService {\n  get entity() {\n    return \"user\";\n  }\n  async getUsers() {\n    try {\n      return await this.request().get(`${this.entity}`);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async login(data) {\n    try {\n      return await this.request().post(`${this.entity}/login`, data);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async register(data) {\n    try {\n      return await this.request().post(`${this.entity}/register`, data);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async delete(id) {\n    try {\n      return await this.request().delete(`${this.entity}/${id}`);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async updateProfile(data) {\n    try {\n      return await this.request().put(`${this.entity}/Update/?id=${data.id}`, data);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async updatePassword(data) {\n    try {\n      return await this.request().put(`${this.entity}/ChangePassword/?id=${data.id}`, data);\n    } catch (e) {\n      return e.response;\n    }\n  }\n\n  // async emailVerify(token) {\n  //     try {\n  //         return await this.request().get(`${this.entity}/email-verify?token=${token}`)\n  //     } catch (e) {\n  //         return e.response\n  //     }\n  // }\n\n  // async getProfiles() {\n  //     try {\n  //         return await this.request().get(`${this.entity}/profiles`)\n  //     } catch (e) {\n  //         return e.response\n  //     }\n  // }\n\n  // async getProfileByEmail(email) {\n  //     try {\n  //         return await this.request().post(`${this.entity}/profiles/profile-by-email`, { \"email\": email })\n  //     } catch (e) {\n  //         return e.response\n  //     }\n  // }\n\n  // async changeAvatar(profileId, data) {\n  //     try {\n  //         return await this.request().patch(`${this.entity}/profiles/${profileId}/change_avatar/`, data)\n  //     } catch (e) {\n  //         return e.response\n  //     }\n  // }\n\n  // async createProfile(data) {\n  //     try {\n  //         return await this.request().post(`${this.entity}/profiles`, data)\n  //     } catch (e) {\n  //         return e.response\n  //     }\n  // }\n\n  // async updateProfile(data) {\n  //     try {\n  //         return await this.request().patch(`${this.entity}/profiles/${data['id']}/`, data)\n  //     } catch (e) {\n  //         return e.response\n  //     }\n  // }\n\n  // async deleteProfile(id) {\n  //     try {\n  //         return await this.request().delete(`${this.entity}/profiles/${id}`)\n  //     } catch (e) {\n  //         return e.response;\n  //     }\n  // }\n}\n\nexport default new UserService();","map":{"version":3,"names":["BaseService","UserService","entity","getUsers","request","get","e","response","login","data","post","register","delete","id","updateProfile","put","updatePassword"],"sources":["D:/nhatj/WorkSpace/movie-web/src/services/user/user.js"],"sourcesContent":["import BaseService from \"@/services/base\";\n\nclass UserService extends BaseService {\n    get entity() {\n        return \"user\"\n    }\n\n    async getUsers() {\n        try {\n            return await this.request().get(`${this.entity}`)\n        } catch (e) {\n            return e.response\n        }\n    }\n\n    async login(data) {\n        try {\n            return await this.request().post(`${this.entity}/login`, data)\n        } catch (e) {\n            return e.response\n        }\n    }\n\n    async register(data) {\n        try {\n            return await this.request().post(`${this.entity}/register`, data)\n        } catch (e) {\n            return e.response\n        }\n    }\n\n    async delete(id) {\n        try {\n            return await this.request().delete(`${this.entity}/${id}`)\n        } catch (e) {\n            return e.response\n        }\n    }\n\n    async updateProfile(data) {\n        try {\n            return await this.request().put(`${this.entity}/Update/?id=${data.id}`, data)\n        } catch (e) {\n            return e.response\n        }\n    }\n\n    async updatePassword(data) {\n        try {\n            return await this.request().put(`${this.entity}/ChangePassword/?id=${data.id}`, data)\n        } catch (e) {\n            return e.response\n        }\n    }\n\n    // async emailVerify(token) {\n    //     try {\n    //         return await this.request().get(`${this.entity}/email-verify?token=${token}`)\n    //     } catch (e) {\n    //         return e.response\n    //     }\n    // }\n\n    // async getProfiles() {\n    //     try {\n    //         return await this.request().get(`${this.entity}/profiles`)\n    //     } catch (e) {\n    //         return e.response\n    //     }\n    // }\n\n\n    // async getProfileByEmail(email) {\n    //     try {\n    //         return await this.request().post(`${this.entity}/profiles/profile-by-email`, { \"email\": email })\n    //     } catch (e) {\n    //         return e.response\n    //     }\n    // }\n\n    // async changeAvatar(profileId, data) {\n    //     try {\n    //         return await this.request().patch(`${this.entity}/profiles/${profileId}/change_avatar/`, data)\n    //     } catch (e) {\n    //         return e.response\n    //     }\n    // }\n\n    // async createProfile(data) {\n    //     try {\n    //         return await this.request().post(`${this.entity}/profiles`, data)\n    //     } catch (e) {\n    //         return e.response\n    //     }\n    // }\n\n    // async updateProfile(data) {\n    //     try {\n    //         return await this.request().patch(`${this.entity}/profiles/${data['id']}/`, data)\n    //     } catch (e) {\n    //         return e.response\n    //     }\n    // }\n\n    // async deleteProfile(id) {\n    //     try {\n    //         return await this.request().delete(`${this.entity}/profiles/${id}`)\n    //     } catch (e) {\n    //         return e.response;\n    //     }\n    // }\n}\n\nexport default new UserService();\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,iBAAiB;AAEzC,MAAMC,WAAW,SAASD,WAAW,CAAC;EAClC,IAAIE,MAAMA,CAAA,EAAG;IACT,OAAO,MAAM;EACjB;EAEA,MAAMC,QAAQA,CAAA,EAAG;IACb,IAAI;MACA,OAAO,MAAM,IAAI,CAACC,OAAO,EAAE,CAACC,GAAG,CAAE,GAAE,IAAI,CAACH,MAAO,EAAC,CAAC;IACrD,CAAC,CAAC,OAAOI,CAAC,EAAE;MACR,OAAOA,CAAC,CAACC,QAAQ;IACrB;EACJ;EAEA,MAAMC,KAAKA,CAACC,IAAI,EAAE;IACd,IAAI;MACA,OAAO,MAAM,IAAI,CAACL,OAAO,EAAE,CAACM,IAAI,CAAE,GAAE,IAAI,CAACR,MAAO,QAAO,EAAEO,IAAI,CAAC;IAClE,CAAC,CAAC,OAAOH,CAAC,EAAE;MACR,OAAOA,CAAC,CAACC,QAAQ;IACrB;EACJ;EAEA,MAAMI,QAAQA,CAACF,IAAI,EAAE;IACjB,IAAI;MACA,OAAO,MAAM,IAAI,CAACL,OAAO,EAAE,CAACM,IAAI,CAAE,GAAE,IAAI,CAACR,MAAO,WAAU,EAAEO,IAAI,CAAC;IACrE,CAAC,CAAC,OAAOH,CAAC,EAAE;MACR,OAAOA,CAAC,CAACC,QAAQ;IACrB;EACJ;EAEA,MAAMK,MAAMA,CAACC,EAAE,EAAE;IACb,IAAI;MACA,OAAO,MAAM,IAAI,CAACT,OAAO,EAAE,CAACQ,MAAM,CAAE,GAAE,IAAI,CAACV,MAAO,IAAGW,EAAG,EAAC,CAAC;IAC9D,CAAC,CAAC,OAAOP,CAAC,EAAE;MACR,OAAOA,CAAC,CAACC,QAAQ;IACrB;EACJ;EAEA,MAAMO,aAAaA,CAACL,IAAI,EAAE;IACtB,IAAI;MACA,OAAO,MAAM,IAAI,CAACL,OAAO,EAAE,CAACW,GAAG,CAAE,GAAE,IAAI,CAACb,MAAO,eAAcO,IAAI,CAACI,EAAG,EAAC,EAAEJ,IAAI,CAAC;IACjF,CAAC,CAAC,OAAOH,CAAC,EAAE;MACR,OAAOA,CAAC,CAACC,QAAQ;IACrB;EACJ;EAEA,MAAMS,cAAcA,CAACP,IAAI,EAAE;IACvB,IAAI;MACA,OAAO,MAAM,IAAI,CAACL,OAAO,EAAE,CAACW,GAAG,CAAE,GAAE,IAAI,CAACb,MAAO,uBAAsBO,IAAI,CAACI,EAAG,EAAC,EAAEJ,IAAI,CAAC;IACzF,CAAC,CAAC,OAAOH,CAAC,EAAE;MACR,OAAOA,CAAC,CAACC,QAAQ;IACrB;EACJ;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;;AAEA,eAAe,IAAIN,WAAW,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}