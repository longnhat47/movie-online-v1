{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"movie-detail\"\n};\nconst _hoisted_2 = {\n  class: \"container text-center\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"video\", {\n  src: \"\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.movie.name), 1 /* TEXT */), _hoisted_3])]);\n}","map":{"version":3,"names":["class","_createElementVNode","src","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","_ctx","movie","name","_hoisted_3"],"sources":["D:\\nhatj\\WorkSpace\\movie-web\\src\\components\\WatchMovieComponent.vue"],"sourcesContent":["<template>\n  <div class=\"movie-detail\">\n    <div class=\"container text-center\">\n      <h1>{{ movie.name }}</h1>\n      <video src=\"\"></video>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapActions,mapState} from 'vuex'\nexport default {\n  computed:{\n    ...mapState('movie', ['movie'])\n  },\n  methods:{\n    ...mapActions('movie', ['fetchMovieDetail'])\n\n  },\n  created(){\n    this.fetchMovieDetail(this.$route.params.id)\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAuB;gCAEhCC,mBAAA,CAAsB;EAAfC,GAAG,EAAC;AAAE;;;uBAHjBC,mBAAA,CAKM,OALNC,UAKM,GAJJH,mBAAA,CAGM,OAHNI,UAGM,GAFJJ,mBAAA,CAAyB,YAAAK,gBAAA,CAAlBC,IAAA,CAAAC,KAAK,CAACC,IAAI,kBACjBC,UAAsB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}